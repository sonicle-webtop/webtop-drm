/**
 * This class is generated by jOOQ
 */
package com.sonicle.webtop.drm.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CostTypesRecord extends org.jooq.impl.UpdatableRecordImpl<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord> implements org.jooq.Record10<java.lang.Integer, java.lang.String, java.lang.String, java.math.BigDecimal, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> {

	private static final long serialVersionUID = -1543902998;

	/**
	 * Setter for <code>drm.cost_types.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>drm.cost_types.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>drm.cost_types.domain_id</code>.
	 */
	public void setDomainId(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>drm.cost_types.domain_id</code>.
	 */
	public java.lang.String getDomainId() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>drm.cost_types.description</code>.
	 */
	public void setDescription(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>drm.cost_types.description</code>.
	 */
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>drm.cost_types.max_import</code>.
	 */
	public void setMaxImport(java.math.BigDecimal value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>drm.cost_types.max_import</code>.
	 */
	public java.math.BigDecimal getMaxImport() {
		return (java.math.BigDecimal) getValue(3);
	}

	/**
	 * Setter for <code>drm.cost_types.cost_type</code>.
	 */
	public void setCostType(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>drm.cost_types.cost_type</code>.
	 */
	public java.lang.String getCostType() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>drm.cost_types.with_others</code>.
	 */
	public void setWithOthers(java.lang.Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>drm.cost_types.with_others</code>.
	 */
	public java.lang.Boolean getWithOthers() {
		return (java.lang.Boolean) getValue(5);
	}

	/**
	 * Setter for <code>drm.cost_types.per_person</code>.
	 */
	public void setPerPerson(java.lang.Boolean value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>drm.cost_types.per_person</code>.
	 */
	public java.lang.Boolean getPerPerson() {
		return (java.lang.Boolean) getValue(6);
	}

	/**
	 * Setter for <code>drm.cost_types.km</code>.
	 */
	public void setKm(java.lang.Boolean value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>drm.cost_types.km</code>.
	 */
	public java.lang.Boolean getKm() {
		return (java.lang.Boolean) getValue(7);
	}

	/**
	 * Setter for <code>drm.cost_types.advance_payment</code>.
	 */
	public void setAdvancePayment(java.lang.Boolean value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>drm.cost_types.advance_payment</code>.
	 */
	public java.lang.Boolean getAdvancePayment() {
		return (java.lang.Boolean) getValue(8);
	}

	/**
	 * Setter for <code>drm.cost_types.exchange</code>.
	 */
	public void setExchange(java.lang.Boolean value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>drm.cost_types.exchange</code>.
	 */
	public java.lang.Boolean getExchange() {
		return (java.lang.Boolean) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row10<java.lang.Integer, java.lang.String, java.lang.String, java.math.BigDecimal, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> fieldsRow() {
		return (org.jooq.Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row10<java.lang.Integer, java.lang.String, java.lang.String, java.math.BigDecimal, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> valuesRow() {
		return (org.jooq.Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.DOMAIN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.math.BigDecimal> field4() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.MAX_IMPORT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.COST_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field6() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.WITH_OTHERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field7() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.PER_PERSON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field8() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.KM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field9() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.ADVANCE_PAYMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field10() {
		return com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES.EXCHANGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getDomainId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.math.BigDecimal value4() {
		return getMaxImport();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getCostType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value6() {
		return getWithOthers();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value7() {
		return getPerPerson();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value8() {
		return getKm();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value9() {
		return getAdvancePayment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value10() {
		return getExchange();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value2(java.lang.String value) {
		setDomainId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value3(java.lang.String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value4(java.math.BigDecimal value) {
		setMaxImport(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value5(java.lang.String value) {
		setCostType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value6(java.lang.Boolean value) {
		setWithOthers(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value7(java.lang.Boolean value) {
		setPerPerson(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value8(java.lang.Boolean value) {
		setKm(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value9(java.lang.Boolean value) {
		setAdvancePayment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord value10(java.lang.Boolean value) {
		setExchange(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CostTypesRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.math.BigDecimal value4, java.lang.String value5, java.lang.Boolean value6, java.lang.Boolean value7, java.lang.Boolean value8, java.lang.Boolean value9, java.lang.Boolean value10) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CostTypesRecord
	 */
	public CostTypesRecord() {
		super(com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES);
	}

	/**
	 * Create a detached, initialised CostTypesRecord
	 */
	public CostTypesRecord(java.lang.Integer id, java.lang.String domainId, java.lang.String description, java.math.BigDecimal maxImport, java.lang.String costType, java.lang.Boolean withOthers, java.lang.Boolean perPerson, java.lang.Boolean km, java.lang.Boolean advancePayment, java.lang.Boolean exchange) {
		super(com.sonicle.webtop.drm.jooq.tables.CostTypes.COST_TYPES);

		setValue(0, id);
		setValue(1, domainId);
		setValue(2, description);
		setValue(3, maxImport);
		setValue(4, costType);
		setValue(5, withOthers);
		setValue(6, perPerson);
		setValue(7, km);
		setValue(8, advancePayment);
		setValue(9, exchange);
	}
}
