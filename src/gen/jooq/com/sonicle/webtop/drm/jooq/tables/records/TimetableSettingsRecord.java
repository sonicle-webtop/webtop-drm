/**
 * This class is generated by jOOQ
 */
package com.sonicle.webtop.drm.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimetableSettingsRecord extends org.jooq.impl.UpdatableRecordImpl<com.sonicle.webtop.drm.jooq.tables.records.TimetableSettingsRecord> implements org.jooq.Record17<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> {

	private static final long serialVersionUID = -354838271;

	/**
	 * Setter for <code>drm.timetable_settings.timetable_setting_id</code>.
	 */
	public void setTimetableSettingId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.timetable_setting_id</code>.
	 */
	public java.lang.Integer getTimetableSettingId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>drm.timetable_settings.domain_id</code>.
	 */
	public void setDomainId(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.domain_id</code>.
	 */
	public java.lang.String getDomainId() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>drm.timetable_settings.allowed_addresses</code>.
	 */
	public void setAllowedAddresses(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.allowed_addresses</code>.
	 */
	public java.lang.String getAllowedAddresses() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>drm.timetable_settings.allowed_users</code>.
	 */
	public void setAllowedUsers(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.allowed_users</code>.
	 */
	public java.lang.String getAllowedUsers() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>drm.timetable_settings.staff_office_email</code>.
	 */
	public void setStaffOfficeEmail(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.staff_office_email</code>.
	 */
	public java.lang.String getStaffOfficeEmail() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>drm.timetable_settings.requests_holidays_permits_previous_dates</code>.
	 */
	public void setRequestsHolidaysPermitsPreviousDates(java.lang.Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.requests_holidays_permits_previous_dates</code>.
	 */
	public java.lang.Boolean getRequestsHolidaysPermitsPreviousDates() {
		return (java.lang.Boolean) getValue(5);
	}

	/**
	 * Setter for <code>drm.timetable_settings.total_tolerance_in_minutes</code>.
	 */
	public void setTotalToleranceInMinutes(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.total_tolerance_in_minutes</code>.
	 */
	public java.lang.String getTotalToleranceInMinutes() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>drm.timetable_settings.rounding</code>.
	 */
	public void setRounding(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.rounding</code>.
	 */
	public java.lang.String getRounding() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>drm.timetable_settings.minimum_extraordinary</code>.
	 */
	public void setMinimumExtraordinary(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.minimum_extraordinary</code>.
	 */
	public java.lang.String getMinimumExtraordinary() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>drm.timetable_settings.break_anomaly</code>.
	 */
	public void setBreakAnomaly(java.lang.Boolean value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.break_anomaly</code>.
	 */
	public java.lang.Boolean getBreakAnomaly() {
		return (java.lang.Boolean) getValue(9);
	}

	/**
	 * Setter for <code>drm.timetable_settings.read_only_events</code>.
	 */
	public void setReadOnlyEvents(java.lang.Boolean value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.read_only_events</code>.
	 */
	public java.lang.Boolean getReadOnlyEvents() {
		return (java.lang.Boolean) getValue(10);
	}

	/**
	 * Setter for <code>drm.timetable_settings.requests_permits_not_remunered</code>.
	 */
	public void setRequestsPermitsNotRemunered(java.lang.Boolean value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.requests_permits_not_remunered</code>.
	 */
	public java.lang.Boolean getRequestsPermitsNotRemunered() {
		return (java.lang.Boolean) getValue(11);
	}

	/**
	 * Setter for <code>drm.timetable_settings.requests_permits_medical_visits</code>.
	 */
	public void setRequestsPermitsMedicalVisits(java.lang.Boolean value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.requests_permits_medical_visits</code>.
	 */
	public java.lang.Boolean getRequestsPermitsMedicalVisits() {
		return (java.lang.Boolean) getValue(12);
	}

	/**
	 * Setter for <code>drm.timetable_settings.requests_permits_contractuals</code>.
	 */
	public void setRequestsPermitsContractuals(java.lang.Boolean value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.requests_permits_contractuals</code>.
	 */
	public java.lang.Boolean getRequestsPermitsContractuals() {
		return (java.lang.Boolean) getValue(13);
	}

	/**
	 * Setter for <code>drm.timetable_settings.company_exit</code>.
	 */
	public void setCompanyExit(java.lang.Boolean value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.company_exit</code>.
	 */
	public java.lang.Boolean getCompanyExit() {
		return (java.lang.Boolean) getValue(14);
	}

	/**
	 * Setter for <code>drm.timetable_settings.manage_stamp</code>.
	 */
	public void setManageStamp(java.lang.Boolean value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.manage_stamp</code>.
	 */
	public java.lang.Boolean getManageStamp() {
		return (java.lang.Boolean) getValue(15);
	}

	/**
	 * Setter for <code>drm.timetable_settings.medical_visits_automatically_approved</code>.
	 */
	public void setMedicalVisitsAutomaticallyApproved(java.lang.Boolean value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>drm.timetable_settings.medical_visits_automatically_approved</code>.
	 */
	public java.lang.Boolean getMedicalVisitsAutomaticallyApproved() {
		return (java.lang.Boolean) getValue(16);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record17 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row17<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> fieldsRow() {
		return (org.jooq.Row17) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row17<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> valuesRow() {
		return (org.jooq.Row17) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.TIMETABLE_SETTING_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.DOMAIN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.ALLOWED_ADDRESSES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.ALLOWED_USERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.STAFF_OFFICE_EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field6() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.REQUESTS_HOLIDAYS_PERMITS_PREVIOUS_DATES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.TOTAL_TOLERANCE_IN_MINUTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.ROUNDING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.MINIMUM_EXTRAORDINARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field10() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.BREAK_ANOMALY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field11() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.READ_ONLY_EVENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field12() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.REQUESTS_PERMITS_NOT_REMUNERED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field13() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.REQUESTS_PERMITS_MEDICAL_VISITS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field14() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.REQUESTS_PERMITS_CONTRACTUALS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field15() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.COMPANY_EXIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field16() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.MANAGE_STAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field17() {
		return com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS.MEDICAL_VISITS_AUTOMATICALLY_APPROVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getTimetableSettingId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getDomainId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getAllowedAddresses();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getAllowedUsers();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getStaffOfficeEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value6() {
		return getRequestsHolidaysPermitsPreviousDates();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getTotalToleranceInMinutes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getRounding();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getMinimumExtraordinary();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value10() {
		return getBreakAnomaly();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value11() {
		return getReadOnlyEvents();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value12() {
		return getRequestsPermitsNotRemunered();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value13() {
		return getRequestsPermitsMedicalVisits();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value14() {
		return getRequestsPermitsContractuals();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value15() {
		return getCompanyExit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value16() {
		return getManageStamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value17() {
		return getMedicalVisitsAutomaticallyApproved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value1(java.lang.Integer value) {
		setTimetableSettingId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value2(java.lang.String value) {
		setDomainId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value3(java.lang.String value) {
		setAllowedAddresses(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value4(java.lang.String value) {
		setAllowedUsers(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value5(java.lang.String value) {
		setStaffOfficeEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value6(java.lang.Boolean value) {
		setRequestsHolidaysPermitsPreviousDates(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value7(java.lang.String value) {
		setTotalToleranceInMinutes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value8(java.lang.String value) {
		setRounding(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value9(java.lang.String value) {
		setMinimumExtraordinary(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value10(java.lang.Boolean value) {
		setBreakAnomaly(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value11(java.lang.Boolean value) {
		setReadOnlyEvents(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value12(java.lang.Boolean value) {
		setRequestsPermitsNotRemunered(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value13(java.lang.Boolean value) {
		setRequestsPermitsMedicalVisits(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value14(java.lang.Boolean value) {
		setRequestsPermitsContractuals(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value15(java.lang.Boolean value) {
		setCompanyExit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value16(java.lang.Boolean value) {
		setManageStamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord value17(java.lang.Boolean value) {
		setMedicalVisitsAutomaticallyApproved(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimetableSettingsRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.Boolean value6, java.lang.String value7, java.lang.String value8, java.lang.String value9, java.lang.Boolean value10, java.lang.Boolean value11, java.lang.Boolean value12, java.lang.Boolean value13, java.lang.Boolean value14, java.lang.Boolean value15, java.lang.Boolean value16, java.lang.Boolean value17) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TimetableSettingsRecord
	 */
	public TimetableSettingsRecord() {
		super(com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS);
	}

	/**
	 * Create a detached, initialised TimetableSettingsRecord
	 */
	public TimetableSettingsRecord(java.lang.Integer timetableSettingId, java.lang.String domainId, java.lang.String allowedAddresses, java.lang.String allowedUsers, java.lang.String staffOfficeEmail, java.lang.Boolean requestsHolidaysPermitsPreviousDates, java.lang.String totalToleranceInMinutes, java.lang.String rounding, java.lang.String minimumExtraordinary, java.lang.Boolean breakAnomaly, java.lang.Boolean readOnlyEvents, java.lang.Boolean requestsPermitsNotRemunered, java.lang.Boolean requestsPermitsMedicalVisits, java.lang.Boolean requestsPermitsContractuals, java.lang.Boolean companyExit, java.lang.Boolean manageStamp, java.lang.Boolean medicalVisitsAutomaticallyApproved) {
		super(com.sonicle.webtop.drm.jooq.tables.TimetableSettings.TIMETABLE_SETTINGS);

		setValue(0, timetableSettingId);
		setValue(1, domainId);
		setValue(2, allowedAddresses);
		setValue(3, allowedUsers);
		setValue(4, staffOfficeEmail);
		setValue(5, requestsHolidaysPermitsPreviousDates);
		setValue(6, totalToleranceInMinutes);
		setValue(7, rounding);
		setValue(8, minimumExtraordinary);
		setValue(9, breakAnomaly);
		setValue(10, readOnlyEvents);
		setValue(11, requestsPermitsNotRemunered);
		setValue(12, requestsPermitsMedicalVisits);
		setValue(13, requestsPermitsContractuals);
		setValue(14, companyExit);
		setValue(15, manageStamp);
		setValue(16, medicalVisitsAutomaticallyApproved);
	}
}
